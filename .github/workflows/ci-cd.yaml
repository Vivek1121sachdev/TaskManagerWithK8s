name: Deploy with Terraform and ECR

on:
  push:
    branches:
      - base-branch
  pull_request:
    branches:
      - base-branch

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  FRONTEND_REPO_NAME: "frontend-repo"
  BACKEND_REPO_NAME: "backend-repo"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Extract Git Hash
        id: git-info
        run: echo "GIT_HASH=$(git rev-parse --short=8 HEAD)" >> $GITHUB_ENV

      - name: Deploy to AWS
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          sudo apt-get update

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./terraform

      - name: Download tfvars from S3
        run: |
          aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/terraform.tfvars ./terraform/terraform.tfvars

      - name: Terraform Plan
        run: terraform plan -target=module.ecr
        working-directory: ./terraform

      # # Step 7: Build and Push Frontend Docker Image
      # - name: Build and Push Frontend Image
      #   run: |
      #     docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$FRONTEND_REPO_NAME:${{ env.GIT_HASH }} ./frontend
      #     echo "Logging in to Amazon ECR..."
      #     aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      #     docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$FRONTEND_REPO_NAME:${{ env.GIT_HASH }}
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # # Step 8: Build and Push Backend Docker Image
      # - name: Build and Push Backend Image
      #   run: |
      #     docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$BACKEND_REPO_NAME:${{ env.GIT_HASH }} ./backend
      #     echo "Logging in to Amazon ECR..."
      #     aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      #     docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$BACKEND_REPO_NAME:${{ env.GIT_HASH }}
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # # Step 9: Terraform Plan
      # - name: Terraform Plan
      #   run: terraform plan
      #   working-directory: ./terraform
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # # Step 10: Terraform Apply
      # - name: Terraform Apply
      #   run: terraform apply --auto-approve
      #   working-directory: ./terraform
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
